"use strict";(self.webpackChunkprogramming_basics=self.webpackChunkprogramming_basics||[]).push([[345],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||o;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>x});var a=n(7462),r=n(7294),o=n(6010),i=n(2466),l=n(6550),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=m({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),g=(()=>{const e=s??p;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var g=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(p(t),s(a))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:d},i,{className:(0,o.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function x(e){const t=(0,g.Z)();return r.createElement(w,(0,a.Z)({key:String(t)},e))}},5918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));n(4866),n(5162);const o={sidebar_position:8},i="Exception Handling",l={unversionedId:"oop/exception-handling",id:"oop/exception-handling",title:"Exception Handling",description:"Exception handling is a mechanism in object-oriented programming that allows a",source:"@site/docs/oop/exception-handling.mdx",sourceDirName:"oop",slug:"/oop/exception-handling",permalink:"/programming-basics/docs/oop/exception-handling",draft:!1,editUrl:"https://github.com/alexkmj/programming-basics/tree/master/docs/docs/oop/exception-handling.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"sidebar",previous:{title:"Generics",permalink:"/programming-basics/docs/oop/generics"},next:{title:"No More Null",permalink:"/programming-basics/docs/oop/no-more-null"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"exception-handling"},"Exception Handling"),(0,r.kt)("p",null,"Exception handling is a mechanism in object-oriented programming that allows a\nprogram to handle runtime errors andunexpected events that can occur during the\nexecution of a program. Exceptions are objects that represent errors, and they\ncan be thrown by code that detects an error condition. When an exception is\nthrown, it is caught by a handler that can take appropriate actions, such as\nlogging an error message, displaying a warning to the user, or attempting to\nrecover from the error."),(0,r.kt)("p",null,"In Java, exceptions are handled through a try-catch block. The code that may\nthrow an exception is enclosed within a try block, and any exceptions that are\nthrown are caught by one or more catch blocks. Each catch block specifies the\ntype of exception it can handle, and the code within the block is executed if an\nexception of that type is thrown."),(0,r.kt)("p",null,"For example, consider the following Java code that reads a number from the user\nand attempts to convert it to an integer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.Scanner;\n\npublic class Example {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print("Enter a number: ");\n        String input = scanner.nextLine();\n        try {\n            int number = Integer.parseInt(input);\n            System.out.println("The number is: " + number);\n        } catch (NumberFormatException e) {\n            System.err.println("Invalid input: " + input);\n        }\n    }\n}\n')),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"parseInt")," method can throw a ",(0,r.kt)("inlineCode",{parentName:"p"},"NumberFormatException")," if\nthe input string is not a valid integer. This exception is caught by the catch\nblock that follows the try block, and an error message is printed to the\nconsole. Without exception handling, the program would crash if the user entered\nan invalid input."),(0,r.kt)("p",null,"Exception handling is an important part of writing robust and reliable code, and\nit allows programs to recover gracefully from errors instead of crashing or\nbehaving unpredictably."),(0,r.kt)("h1",{id:"throwing-exceptions"},"Throwing Exceptions"),(0,r.kt)("p",null,"Throwing an exception in Java is a way of signaling that an error or exceptional\ncondition has occurred during the execution of a program. This can help improve\nthe robustness and reliability of the program by allowing the program to\ngracefully handle errors and prevent them from causing the program to crash or\nproduce incorrect results."),(0,r.kt)("p",null,"To throw an exception in Java, you first need to create an instance of the\nexception class that corresponds to the type of error you want to throw. For\nexample, to signal that a file could not be found, you would create an instance\nof the ",(0,r.kt)("inlineCode",{parentName:"p"},"FileNotFoundException")," class. You can then throw this exception using\nthe throw keyword followed by the exception object. Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public void readFile(String filename) throws FileNotFoundException {\n    File file = new File(filename);\n    if (!file.exists()) {\n        throw new FileNotFoundException("File not found: " + filename);\n    }\n    // code to read file...\n}\n')),(0,r.kt)("p",null,"In this example, if the file does not exist, an instance of\n",(0,r.kt)("inlineCode",{parentName:"p"},"FileNotFoundException")," is created with a message indicating the name of the\nfile that could not be found. This exception is then thrown using the throw\nkeyword. The throws keyword in the method signature indicates that the method\nmay throw this exception and that calling code must handle it accordingly."),(0,r.kt)("p",null,"When an exception is thrown, it interrupts the normal flow of execution and is\npassed up the call stack until it is caught by an appropriate catch block or\nuntil it reaches the top level of the program, at which point it will terminate\nthe program."),(0,r.kt)("h1",{id:"function-interfaces"},"Function Interfaces"),(0,r.kt)("p",null,"In Java, a functional interface is an interface that contains only one abstract\nmethod. It is also known as a Single Abstract Method (SAM) interface. The\npurpose of a functional interface is to provide a way to define a single\nfunctionality that can be executed by lambda expressions."),(0,r.kt)("p",null,"Functional interfaces are used extensively in Java 8 and later versions for\nlambda expressions, method references, and the Stream API. The use of functional\ninterfaces makes it possible to write concise and expressive code."),(0,r.kt)("p",null,"Here's an example of a functional interface in Java:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Converter<F, T> {\n    T convert(F from);\n}\n")),(0,r.kt)("p",null,"In this example, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Converter")," interface has a single abstract method convert\nthat takes a parameter of type ",(0,r.kt)("inlineCode",{parentName:"p"},"F")," and returns a value of type ",(0,r.kt)("inlineCode",{parentName:"p"},"T"),". The\n",(0,r.kt)("inlineCode",{parentName:"p"},"@FunctionalInterface")," annotation is used to indicate that this interface is a\nfunctional interface."),(0,r.kt)("p",null,"Functional interfaces can be used with lambda expressions to provide an\nimplementation for the abstract method. Here's an example of how to use the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Converter")," interface with a lambda expression:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Converter<String, Integer> converter = (from) -> Integer.valueOf(from);\nInteger result = converter.convert("123");\nSystem.out.println(result);    // Output: 123\n')),(0,r.kt)("p",null,"In this example, a lambda expression is used to provide an implementation for\nthe convert method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Converter")," interface. The lambda expression takes a\nString as a parameter and returns an Integer."),(0,r.kt)("p",null,"Functional interfaces provide a simple and powerful way to write code that is\nconcise, expressive, and easy to read."))}d.isMDXComponent=!0}}]);