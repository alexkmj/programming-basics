"use strict";(self.webpackChunkprogramming_basics=self.webpackChunkprogramming_basics||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"sidebar":[{"type":"category","label":"Object Oriented Programming","items":[{"type":"link","label":"Abstraction","href":"/programming-basics/docs/oop/abstraction","docId":"oop/abstraction"},{"type":"link","label":"Encapsulation","href":"/programming-basics/docs/oop/encapsulation","docId":"oop/encapsulation"},{"type":"link","label":"Immutability","href":"/programming-basics/docs/oop/immutability","docId":"oop/immutability"},{"type":"link","label":"Inheritance","href":"/programming-basics/docs/oop/inheritance","docId":"oop/inheritance"},{"type":"link","label":"Substitution","href":"/programming-basics/docs/oop/substitution","docId":"oop/substitution"},{"type":"link","label":"SOLID Principles","href":"/programming-basics/docs/oop/solid","docId":"oop/solid"},{"type":"link","label":"Generics","href":"/programming-basics/docs/oop/generics","docId":"oop/generics"},{"type":"link","label":"No More Null","href":"/programming-basics/docs/oop/no-more-null","docId":"oop/no-more-null"},{"type":"link","label":"Exception Handling","href":"/programming-basics/docs/oop/exception-handling","docId":"oop/exception-handling"},{"type":"link","label":"Assertions","href":"/programming-basics/docs/oop/assertions","docId":"oop/assertions"}],"collapsed":true,"collapsible":true}]},"docs":{"index":{"id":"index","title":"index","description":""},"oop/abstraction":{"id":"oop/abstraction","title":"Abstraction","description":"Abstraction refers to the process of hiding complexity and focusing on","sidebar":"sidebar"},"oop/assertions":{"id":"oop/assertions","title":"Assertions","description":"Assertions in programming are statements that assert or check whether certain","sidebar":"sidebar"},"oop/encapsulation":{"id":"oop/encapsulation","title":"Encapsulation","description":"Encapsulation is a fundamental concept of object-oriented programming. There","sidebar":"sidebar"},"oop/exception-handling":{"id":"oop/exception-handling","title":"Exception Handling","description":"Exception handling is a mechanism in object-oriented programming that allows a","sidebar":"sidebar"},"oop/generics":{"id":"oop/generics","title":"Generics","description":"Generics is a feature in Object-Oriented Programming (OOP) that allows for the","sidebar":"sidebar"},"oop/immutability":{"id":"oop/immutability","title":"Immutability","description":"Immutability is a concept in object-oriented programming where an object\'s","sidebar":"sidebar"},"oop/inheritance":{"id":"oop/inheritance","title":"Inheritance","description":"Inheritance is a concept in object-oriented programming that allows creating","sidebar":"sidebar"},"oop/no-more-null":{"id":"oop/no-more-null","title":"No More Null","description":"\\"No More Null\\" is a programming paradigm that aims to reduce the use of null","sidebar":"sidebar"},"oop/solid":{"id":"oop/solid","title":"SOLID Principles","description":"The SOLID principles are a set of guidelines for writing software that is easy","sidebar":"sidebar"},"oop/substitution":{"id":"oop/substitution","title":"Substitution","description":"Substitutability is an important concept in Object-Oriented Programming (OOP)","sidebar":"sidebar"}}}')}}]);